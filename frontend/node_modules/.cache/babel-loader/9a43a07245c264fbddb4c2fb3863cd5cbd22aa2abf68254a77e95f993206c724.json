{"ast":null,"code":"var _jsxFileName = \"/home/dryphter-dev/Projects/Web/MERN/product-showcase/frontend/src/pages/ShowPost.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { getSinglePost } from \"../services/postService\";\nimport SideBar from \"../components/showPost/SideBar\";\nimport PostContent from \"../components/showPost/PostContent\";\nimport PostBanner from \"../components/showPost/PostBanner\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ShowPost = () => {\n  _s();\n  const [post, setPost] = useState({});\n  const {\n    id\n  } = useParams();\n  const [headings, setHeadings] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const postData = await getSinglePost(id);\n        setPost(postData);\n\n        // Generate headings from post content structure\n        const postContent = postData.content;\n        const postHeadings = [{\n          id: \"intro\",\n          title: postContent.intro.heading\n        }, ...postContent.sections.map((section, index) => ({\n          id: `section-${index}`,\n          title: section.heading\n        })), {\n          id: \"conclusion\",\n          title: postContent.conclusion.heading\n        }];\n        setHeadings(postHeadings);\n      } catch (error) {\n        console.log(\"Error fetching data:\", error);\n      }\n    };\n    fetchData();\n  }, [id]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"\",\n    children: [/*#__PURE__*/_jsxDEV(PostBanner, {\n      post: post\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"py-20 px-10 lg:px-20 xl:px-40\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid xl:grid-cols-10 gap-4\",\n        children: [/*#__PURE__*/_jsxDEV(SideBar, {\n          headings: headings\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PostContent, {\n          post: post\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(ShowPost, \"JlT5QhXgwQyCcWrFZn5EAWG9Lp8=\", false, function () {\n  return [useParams];\n});\n_c = ShowPost;\nexport default ShowPost;\nvar _c;\n$RefreshReg$(_c, \"ShowPost\");","map":{"version":3,"names":["React","useEffect","useState","useParams","getSinglePost","SideBar","PostContent","PostBanner","jsxDEV","_jsxDEV","ShowPost","_s","post","setPost","id","headings","setHeadings","fetchData","postData","postContent","content","postHeadings","title","intro","heading","sections","map","section","index","conclusion","error","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/dryphter-dev/Projects/Web/MERN/product-showcase/frontend/src/pages/ShowPost.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { getSinglePost } from \"../services/postService\";\nimport SideBar from \"../components/showPost/SideBar\";\nimport PostContent from \"../components/showPost/PostContent\";\nimport PostBanner from \"../components/showPost/PostBanner\";\n\nconst ShowPost = () => {\n  const [post, setPost] = useState({});\n  const { id } = useParams();\n  const [headings, setHeadings] = useState([]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const postData = await getSinglePost(id);\n        setPost(postData);\n\n        // Generate headings from post content structure\n        const postContent = postData.content;\n        const postHeadings = [\n          { id: \"intro\", title: postContent.intro.heading },\n          ...postContent.sections.map((section, index) => ({\n            id: `section-${index}`,\n            title: section.heading,\n          })),\n          { id: \"conclusion\", title: postContent.conclusion.heading },\n        ];\n        setHeadings(postHeadings);\n      } catch (error) {\n        console.log(\"Error fetching data:\", error);\n      }\n    };\n\n    fetchData();\n  }, [id]);\n\n  return (\n    <div className=\"\">\n      <PostBanner post={post} />\n\n      {/* body */}\n      <div className=\"py-20 px-10 lg:px-20 xl:px-40\">\n        <div className=\"grid xl:grid-cols-10 gap-4\">\n          <SideBar headings={headings} />\n          <PostContent post={post} />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ShowPost;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,aAAa,QAAQ,yBAAyB;AACvD,OAAOC,OAAO,MAAM,gCAAgC;AACpD,OAAOC,WAAW,MAAM,oCAAoC;AAC5D,OAAOC,UAAU,MAAM,mCAAmC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3D,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC,CAAC;EACpC,MAAM;IAAEY;EAAG,CAAC,GAAGX,SAAS,CAAC,CAAC;EAC1B,MAAM,CAACY,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAE5CD,SAAS,CAAC,MAAM;IACd,MAAMgB,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMd,aAAa,CAACU,EAAE,CAAC;QACxCD,OAAO,CAACK,QAAQ,CAAC;;QAEjB;QACA,MAAMC,WAAW,GAAGD,QAAQ,CAACE,OAAO;QACpC,MAAMC,YAAY,GAAG,CACnB;UAAEP,EAAE,EAAE,OAAO;UAAEQ,KAAK,EAAEH,WAAW,CAACI,KAAK,CAACC;QAAQ,CAAC,EACjD,GAAGL,WAAW,CAACM,QAAQ,CAACC,GAAG,CAAC,CAACC,OAAO,EAAEC,KAAK,MAAM;UAC/Cd,EAAE,EAAG,WAAUc,KAAM,EAAC;UACtBN,KAAK,EAAEK,OAAO,CAACH;QACjB,CAAC,CAAC,CAAC,EACH;UAAEV,EAAE,EAAE,YAAY;UAAEQ,KAAK,EAAEH,WAAW,CAACU,UAAU,CAACL;QAAQ,CAAC,CAC5D;QACDR,WAAW,CAACK,YAAY,CAAC;MAC3B,CAAC,CAAC,OAAOS,KAAK,EAAE;QACdC,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEF,KAAK,CAAC;MAC5C;IACF,CAAC;IAEDb,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,CAACH,EAAE,CAAC,CAAC;EAER,oBACEL,OAAA;IAAKwB,SAAS,EAAC,EAAE;IAAAC,QAAA,gBACfzB,OAAA,CAACF,UAAU;MAACK,IAAI,EAAEA;IAAK;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAG1B7B,OAAA;MAAKwB,SAAS,EAAC,+BAA+B;MAAAC,QAAA,eAC5CzB,OAAA;QAAKwB,SAAS,EAAC,4BAA4B;QAAAC,QAAA,gBACzCzB,OAAA,CAACJ,OAAO;UAACU,QAAQ,EAAEA;QAAS;UAAAoB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC/B7B,OAAA,CAACH,WAAW;UAACM,IAAI,EAAEA;QAAK;UAAAuB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC3B,EAAA,CA3CID,QAAQ;EAAA,QAEGP,SAAS;AAAA;AAAAoC,EAAA,GAFpB7B,QAAQ;AA6Cd,eAAeA,QAAQ;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/home/dryphter-dev/Projects/Web/MERN/product-showcase/frontend/src/pages/Posts.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { getPosts } from \"../services/postService\";\nimport Banner from \"../components/posts/Banner\";\nimport Filters from \"../components/posts/Filters\";\nimport PostsCards from \"../components/posts/PostsCards\";\nimport Pagination from \"../components/posts/Pagination\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Posts = () => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [filteredPosts, setFilteredPosts] = useState([]);\n  const [filter, setFilter] = useState(\"\");\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [currentPage, setCurrentPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(1);\n  const postsPerPage = 4;\n  useEffect(() => {\n    fetchData();\n  }, [currentPage, filter, searchQuery]); // Update when page, filter, or searchQuery changes\n\n  const fetchData = async () => {\n    try {\n      const response = await getPosts({\n        page: currentPage,\n        pageSize: postsPerPage,\n        category: filter,\n        searchQuery: searchQuery\n      });\n      setFilteredPosts(response.posts);\n      setTotalPages(response.totalPages);\n    } catch (error) {\n      console.log(\"Error fetching data:\", error);\n    }\n  };\n  const handleSearch = query => {\n    setSearchQuery(query);\n    setCurrentPage(1); // Reset current page when search query changes\n  };\n  const handleFilter = selectedFilter => {\n    setFilter(selectedFilter);\n    setCurrentPage(1); // Reset current page when filter changes\n  };\n  const handlePagination = pageNumber => {\n    setCurrentPage(pageNumber);\n  };\n  // const [posts, setPosts] = useState([]);\n  // const [filteredPosts, setFilteredPosts] = useState([]);\n  // const [filter, setFilter] = useState(\"\");\n  // const [searchQuery, setSearchQuery] = useState(\"\");\n\n  // useEffect(() => {\n  //   const fetchData = async () => {\n  //     try {\n  //       const postData = await getPosts();\n  //       setPosts(postData);\n  //       setFilteredPosts(postData); // Initialize filtered posts with all posts\n  //     } catch (error) {\n  //       console.log(\"Error fetching data:\", error);\n  //     }\n  //   };\n\n  //   fetchData();\n  // }, []);\n\n  // // Function to handle search\n  // const handleSearch = (query) => {\n  //   setSearchQuery(query); // Update searchQuery state\n  //   const filtered = posts.filter(\n  //     (post) =>\n  //       post.title.toLowerCase().includes(query.toLowerCase()) ||\n  //       post.author.toLowerCase().includes(query.toLowerCase()) ||\n  //       post.category.toLowerCase().includes(query.toLowerCase()) ||\n  //       post.content.toLowerCase().includes(query.toLowerCase())\n  //   );\n  //   setFilteredPosts(filtered); // Update filteredPosts state\n  // };\n\n  // const handleFilter = (filter) => {\n  //   setFilter(filter);\n  //   const filtered = posts.filter((post) =>\n  //     post.category.toLowerCase().includes(filter.toLowerCase())\n  //   );\n  //   setFilteredPosts(filtered);\n  // };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"\",\n    children: [/*#__PURE__*/_jsxDEV(Banner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Filters, {\n      handleFilter: handleFilter,\n      handleSearch: handleSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PostsCards, {\n      posts: filteredPosts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n      currentPage: currentPage,\n      totalPages: totalPages,\n      onPageChange: handlePagination\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n};\n_s(Posts, \"hxWkTJdBzJ2DkXQaWPFGm9yGpiw=\");\n_c = Posts;\nexport default Posts;\nvar _c;\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"names":["React","useState","useEffect","getPosts","Banner","Filters","PostsCards","Pagination","jsxDEV","_jsxDEV","Posts","_s","posts","setPosts","filteredPosts","setFilteredPosts","filter","setFilter","searchQuery","setSearchQuery","currentPage","setCurrentPage","totalPages","setTotalPages","postsPerPage","fetchData","response","page","pageSize","category","error","console","log","handleSearch","query","handleFilter","selectedFilter","handlePagination","pageNumber","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onPageChange","_c","$RefreshReg$"],"sources":["/home/dryphter-dev/Projects/Web/MERN/product-showcase/frontend/src/pages/Posts.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { getPosts } from \"../services/postService\";\nimport Banner from \"../components/posts/Banner\";\nimport Filters from \"../components/posts/Filters\";\nimport PostsCards from \"../components/posts/PostsCards\";\nimport Pagination from \"../components/posts/Pagination\";\n\nconst Posts = () => {\n  const [posts, setPosts] = useState([]);\n  const [filteredPosts, setFilteredPosts] = useState([]);\n  const [filter, setFilter] = useState(\"\");\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [currentPage, setCurrentPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(1);\n  const postsPerPage = 4;\n\n  useEffect(() => {\n    fetchData();\n  }, [currentPage, filter, searchQuery]); // Update when page, filter, or searchQuery changes\n\n  const fetchData = async () => {\n    try {\n      const response = await getPosts({\n        page: currentPage,\n        pageSize: postsPerPage,\n        category: filter,\n        searchQuery: searchQuery\n      });\n      setFilteredPosts(response.posts);\n      setTotalPages(response.totalPages);\n    } catch (error) {\n      console.log(\"Error fetching data:\", error);\n    }\n  };\n\n  const handleSearch = (query) => {\n    setSearchQuery(query);\n    setCurrentPage(1); // Reset current page when search query changes\n  };\n\n  const handleFilter = (selectedFilter) => {\n    setFilter(selectedFilter);\n    setCurrentPage(1); // Reset current page when filter changes\n  };\n\n  const handlePagination = (pageNumber) => {\n    setCurrentPage(pageNumber);\n  };\n  // const [posts, setPosts] = useState([]);\n  // const [filteredPosts, setFilteredPosts] = useState([]);\n  // const [filter, setFilter] = useState(\"\");\n  // const [searchQuery, setSearchQuery] = useState(\"\");\n  \n\n  // useEffect(() => {\n  //   const fetchData = async () => {\n  //     try {\n  //       const postData = await getPosts();\n  //       setPosts(postData);\n  //       setFilteredPosts(postData); // Initialize filtered posts with all posts\n  //     } catch (error) {\n  //       console.log(\"Error fetching data:\", error);\n  //     }\n  //   };\n\n  //   fetchData();\n  // }, []);\n\n  // // Function to handle search\n  // const handleSearch = (query) => {\n  //   setSearchQuery(query); // Update searchQuery state\n  //   const filtered = posts.filter(\n  //     (post) =>\n  //       post.title.toLowerCase().includes(query.toLowerCase()) ||\n  //       post.author.toLowerCase().includes(query.toLowerCase()) ||\n  //       post.category.toLowerCase().includes(query.toLowerCase()) ||\n  //       post.content.toLowerCase().includes(query.toLowerCase())\n  //   );\n  //   setFilteredPosts(filtered); // Update filteredPosts state\n  // };\n\n  // const handleFilter = (filter) => {\n  //   setFilter(filter);\n  //   const filtered = posts.filter((post) =>\n  //     post.category.toLowerCase().includes(filter.toLowerCase())\n  //   );\n  //   setFilteredPosts(filtered);\n  // };\n\n  return (\n    <div className=\"\">\n      <Banner />\n      <Filters handleFilter={handleFilter} handleSearch={handleSearch} />\n      <PostsCards posts={filteredPosts} />\n      <Pagination\n        currentPage={currentPage}\n        totalPages={totalPages}\n        onPageChange={handlePagination}\n      />\n    </div>\n  );\n};\n\nexport default Posts;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
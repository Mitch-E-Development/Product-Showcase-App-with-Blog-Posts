{"ast":null,"code":"var _jsxFileName = \"/home/dryphter-dev/Projects/Web/MERN/product-showcase/frontend/src/pages/Posts.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { getPosts } from \"../services/postService\";\nimport Banner from \"../components/posts/Banner\";\nimport Filters from \"../components/posts/Filters\";\nimport PostsCards from \"../components/posts/PostsCards\";\n// import Pagination from \"../components/posts/Pagination\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Posts = () => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [filteredPosts, setFilteredPosts] = useState([]);\n  const [filter, setFilter] = useState(\"\");\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [postsPerPage, setPostsPerPage] = useState(10);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const postData = await getPosts();\n        setPosts(postData);\n        setFilteredPosts(postData); // Initialize filtered posts with all posts\n      } catch (error) {\n        console.log(\"Error fetching data:\", error);\n      }\n    };\n    fetchData();\n  }, []);\n\n  // Function to handle search\n  const handleSearch = query => {\n    setSearchQuery(query); // Update searchQuery state\n    const filtered = posts.filter(post => post.title.toLowerCase().includes(query.toLowerCase()) || post.author.toLowerCase().includes(query.toLowerCase()) || post.category.toLowerCase().includes(query.toLowerCase()) || post.content.toLowerCase().includes(query.toLowerCase()));\n    setFilteredPosts(filtered); // Update filteredPosts state\n  };\n  const handleFilter = filter => {\n    setFilter(filter);\n    const filtered = posts.filter(post => post.category.toLowerCase().includes(filter.toLowerCase()));\n    setFilteredPosts(filtered);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"\",\n    children: [/*#__PURE__*/_jsxDEV(Banner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Filters, {\n      handleFilter: handleFilter,\n      handleSearch: handleSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PostsCards, {\n      posts: filteredPosts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(Posts, \"Go73p/siDdlwhI/LSxSPHetHsvo=\");\n_c = Posts;\nexport default Posts;\nvar _c;\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"names":["React","useState","useEffect","getPosts","Banner","Filters","PostsCards","jsxDEV","_jsxDEV","Posts","_s","posts","setPosts","filteredPosts","setFilteredPosts","filter","setFilter","searchQuery","setSearchQuery","loading","setLoading","currentPage","setCurrentPage","postsPerPage","setPostsPerPage","fetchData","postData","error","console","log","handleSearch","query","filtered","post","title","toLowerCase","includes","author","category","content","handleFilter","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/dryphter-dev/Projects/Web/MERN/product-showcase/frontend/src/pages/Posts.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { getPosts } from \"../services/postService\";\nimport Banner from \"../components/posts/Banner\";\nimport Filters from \"../components/posts/Filters\";\nimport PostsCards from \"../components/posts/PostsCards\";\n// import Pagination from \"../components/posts/Pagination\";\n\nconst Posts = () => {\n  const [posts, setPosts] = useState([]);\n  const [filteredPosts, setFilteredPosts] = useState([]);\n  const [filter, setFilter] = useState(\"\");\n  const [searchQuery, setSearchQuery] = useState(\"\");\n\n  const [loading, setLoading] = useState(false);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [postsPerPage, setPostsPerPage] = useState(10);\n  \n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const postData = await getPosts();\n        setPosts(postData);\n        setFilteredPosts(postData); // Initialize filtered posts with all posts\n      } catch (error) {\n        console.log(\"Error fetching data:\", error);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  // Function to handle search\n  const handleSearch = (query) => {\n    setSearchQuery(query); // Update searchQuery state\n    const filtered = posts.filter(\n      (post) =>\n        post.title.toLowerCase().includes(query.toLowerCase()) ||\n        post.author.toLowerCase().includes(query.toLowerCase()) ||\n        post.category.toLowerCase().includes(query.toLowerCase()) ||\n        post.content.toLowerCase().includes(query.toLowerCase())\n    );\n    setFilteredPosts(filtered); // Update filteredPosts state\n  };\n\n  const handleFilter = (filter) => {\n    setFilter(filter);\n    const filtered = posts.filter((post) =>\n      post.category.toLowerCase().includes(filter.toLowerCase())\n    );\n    setFilteredPosts(filtered);\n  };\n\n  return (\n    <div className=\"\">\n      <Banner />\n      <Filters handleFilter={handleFilter} handleSearch={handleSearch} />\n      <PostsCards posts={filteredPosts} />\n      {/* <Pagination\n        currentPage={currentPage}\n        totalPages={totalPages}\n        onPageChange={handlePagination}\n      /> */}\n    </div>\n  );\n};\n\nexport default Posts;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
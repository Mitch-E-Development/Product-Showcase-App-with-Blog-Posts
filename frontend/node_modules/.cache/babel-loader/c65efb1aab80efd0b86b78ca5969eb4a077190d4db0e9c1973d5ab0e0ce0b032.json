{"ast":null,"code":"import axios from \"axios\";\nconst api_url = 'http://localhost:5050/api';\nexport const getPosts = async () => {\n  try {\n    // Fetch posts with optional query parameters\n    const response = await axios.get(`${api_url}/posts`);\n    return response.data;\n  } catch (error) {\n    console.log(\"Error getting post data from server\");\n    throw error;\n  }\n};\nexport const searchPosts = async query => {\n  try {\n    const response = await axios.get(`${api_url}/search?query=${query}`);\n    return response.data;\n  } catch (error) {\n    console.error(\"Error searching posts:\", error);\n    throw error;\n  }\n};\nexport const getSinglePost = async id => {\n  //fetch product data from express server\n  try {\n    const response = await axios.get(`${api_url}/posts/${id}`);\n    return response.data;\n  } catch (error) {\n    console.log(\"Error getting post data from server\");\n    throw error;\n  }\n};\n\n// filterService.js\nexport const filterPosts = (posts, categoryFilter, searchQuery) => {\n  return posts.filter(post => {\n    const title = post.title.toLowerCase();\n    const author = post.author.toLowerCase();\n    const category = post.category.toLowerCase();\n    const contentSections = post.content.sections.map(section => `${section.heading} ${section.text}`).join(\" \").toLowerCase();\n    const passesCategoryFilter = categoryFilter === \"\" || category.includes(categoryFilter.toLowerCase());\n    const passesSearchQuery = searchQuery === \"\" || title.includes(searchQuery.toLowerCase()) || author.includes(searchQuery.toLowerCase()) || category.includes(searchQuery.toLowerCase()) || contentSections.includes(searchQuery.toLowerCase());\n    return passesCategoryFilter && passesSearchQuery;\n  });\n};","map":{"version":3,"names":["axios","api_url","getPosts","response","get","data","error","console","log","searchPosts","query","getSinglePost","id","filterPosts","posts","categoryFilter","searchQuery","filter","post","title","toLowerCase","author","category","contentSections","content","sections","map","section","heading","text","join","passesCategoryFilter","includes","passesSearchQuery"],"sources":["/home/dryphter-dev/Projects/Web/MERN/product-showcase/frontend/src/services/postService.js"],"sourcesContent":["import axios from \"axios\";\n\nconst api_url = 'http://localhost:5050/api';\n\nexport const getPosts = async () => {\n  try {\n    // Fetch posts with optional query parameters\n    const response = await axios.get(`${api_url}/posts`);\n    return response.data;\n  } catch (error) {\n    console.log(\"Error getting post data from server\");\n    throw error;\n  }\n};\n\nexport const searchPosts = async (query) => {\n  try {\n      const response = await axios.get(`${api_url}/search?query=${query}`);\n      return response.data;\n  } catch (error) {\n      console.error(\"Error searching posts:\", error);\n      throw error;\n  }\n};\n\n\nexport const getSinglePost = async (id) => {\n  //fetch product data from express server\n  try {\n    const response = await axios.get(`${api_url}/posts/${id}`);\n    return response.data;\n  } catch (error) {\n    console.log(\"Error getting post data from server\");\n    throw error;\n  }\n};\n\n// filterService.js\nexport const filterPosts = (posts, categoryFilter, searchQuery) => {\n  return posts.filter((post) => {\n    const title = post.title.toLowerCase();\n    const author = post.author.toLowerCase();\n    const category = post.category.toLowerCase();\n    const contentSections = post.content.sections\n      .map((section) => `${section.heading} ${section.text}`)\n      .join(\" \")\n      .toLowerCase();\n\n    const passesCategoryFilter =\n      categoryFilter === \"\" || category.includes(categoryFilter.toLowerCase());\n\n    const passesSearchQuery =\n      searchQuery === \"\" ||\n      title.includes(searchQuery.toLowerCase()) ||\n      author.includes(searchQuery.toLowerCase()) ||\n      category.includes(searchQuery.toLowerCase()) ||\n      contentSections.includes(searchQuery.toLowerCase());\n\n    return passesCategoryFilter && passesSearchQuery;\n  });\n};\n\n\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,2BAA2B;AAE3C,OAAO,MAAMC,QAAQ,GAAG,MAAAA,CAAA,KAAY;EAClC,IAAI;IACF;IACA,MAAMC,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAG,CAAE,GAAEH,OAAQ,QAAO,CAAC;IACpD,OAAOE,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACC,GAAG,CAAC,qCAAqC,CAAC;IAClD,MAAMF,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAMG,WAAW,GAAG,MAAOC,KAAK,IAAK;EAC1C,IAAI;IACA,MAAMP,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAG,CAAE,GAAEH,OAAQ,iBAAgBS,KAAM,EAAC,CAAC;IACpE,OAAOP,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAC9C,MAAMA,KAAK;EACf;AACF,CAAC;AAGD,OAAO,MAAMK,aAAa,GAAG,MAAOC,EAAE,IAAK;EACzC;EACA,IAAI;IACF,MAAMT,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAG,CAAE,GAAEH,OAAQ,UAASW,EAAG,EAAC,CAAC;IAC1D,OAAOT,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACC,GAAG,CAAC,qCAAqC,CAAC;IAClD,MAAMF,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAMO,WAAW,GAAGA,CAACC,KAAK,EAAEC,cAAc,EAAEC,WAAW,KAAK;EACjE,OAAOF,KAAK,CAACG,MAAM,CAAEC,IAAI,IAAK;IAC5B,MAAMC,KAAK,GAAGD,IAAI,CAACC,KAAK,CAACC,WAAW,CAAC,CAAC;IACtC,MAAMC,MAAM,GAAGH,IAAI,CAACG,MAAM,CAACD,WAAW,CAAC,CAAC;IACxC,MAAME,QAAQ,GAAGJ,IAAI,CAACI,QAAQ,CAACF,WAAW,CAAC,CAAC;IAC5C,MAAMG,eAAe,GAAGL,IAAI,CAACM,OAAO,CAACC,QAAQ,CAC1CC,GAAG,CAAEC,OAAO,IAAM,GAAEA,OAAO,CAACC,OAAQ,IAAGD,OAAO,CAACE,IAAK,EAAC,CAAC,CACtDC,IAAI,CAAC,GAAG,CAAC,CACTV,WAAW,CAAC,CAAC;IAEhB,MAAMW,oBAAoB,GACxBhB,cAAc,KAAK,EAAE,IAAIO,QAAQ,CAACU,QAAQ,CAACjB,cAAc,CAACK,WAAW,CAAC,CAAC,CAAC;IAE1E,MAAMa,iBAAiB,GACrBjB,WAAW,KAAK,EAAE,IAClBG,KAAK,CAACa,QAAQ,CAAChB,WAAW,CAACI,WAAW,CAAC,CAAC,CAAC,IACzCC,MAAM,CAACW,QAAQ,CAAChB,WAAW,CAACI,WAAW,CAAC,CAAC,CAAC,IAC1CE,QAAQ,CAACU,QAAQ,CAAChB,WAAW,CAACI,WAAW,CAAC,CAAC,CAAC,IAC5CG,eAAe,CAACS,QAAQ,CAAChB,WAAW,CAACI,WAAW,CAAC,CAAC,CAAC;IAErD,OAAOW,oBAAoB,IAAIE,iBAAiB;EAClD,CAAC,CAAC;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
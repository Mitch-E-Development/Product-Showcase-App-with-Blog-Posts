{"ast":null,"code":"import axios from \"axios\";\nexport const getPosts = async () => {\n  try {\n    // Fetch posts with optional query parameters\n    const response = await axios.get(`http://localhost:5050/api/posts`);\n    return response.data;\n  } catch (error) {\n    console.log(\"Error getting post data from server\");\n    throw error;\n  }\n};\nexport const searchPosts = async query => {\n  try {\n    const response = await axios.get(`http://localhost:5050/api/search?query=${query}`);\n    return response.data;\n  } catch (error) {\n    console.error(\"Error searching posts:\", error);\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","getPosts","response","get","data","error","console","log","searchPosts","query"],"sources":["/home/dryphter-dev/Projects/Web/MERN/product-showcase/frontend/src/services/postService.js"],"sourcesContent":["import axios from \"axios\";\n\nexport const getPosts = async () => {\n  try {\n    // Fetch posts with optional query parameters\n    const response = await axios.get(`http://localhost:5050/api/posts`);\n    return response.data;\n  } catch (error) {\n    console.log(\"Error getting post data from server\");\n    throw error;\n  }\n};\n\nexport const searchPosts = async (query) => {\n  try {\n      const response = await axios.get(`http://localhost:5050/api/search?query=${query}`);\n      return response.data;\n  } catch (error) {\n      console.error(\"Error searching posts:\", error);\n      throw error;\n  }\n};\n\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAO,MAAMC,QAAQ,GAAG,MAAAA,CAAA,KAAY;EAClC,IAAI;IACF;IACA,MAAMC,QAAQ,GAAG,MAAMF,KAAK,CAACG,GAAG,CAAE,iCAAgC,CAAC;IACnE,OAAOD,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACC,GAAG,CAAC,qCAAqC,CAAC;IAClD,MAAMF,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAMG,WAAW,GAAG,MAAOC,KAAK,IAAK;EAC1C,IAAI;IACA,MAAMP,QAAQ,GAAG,MAAMF,KAAK,CAACG,GAAG,CAAE,0CAAyCM,KAAM,EAAC,CAAC;IACnF,OAAOP,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAC9C,MAAMA,KAAK;EACf;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
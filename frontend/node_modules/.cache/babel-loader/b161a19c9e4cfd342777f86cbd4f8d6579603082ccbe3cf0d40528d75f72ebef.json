{"ast":null,"code":"var _jsxFileName = \"/home/dryphter-dev/Projects/Web/MERN/product-showcase/frontend/src/pages/Contact.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Banner from \"../components/contact/Banner\";\nimport Form from \"../components/contact/Form\";\nimport Map from \"../components/contact/Map\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Contact = () => {\n  _s();\n  // const [formData, setFormData] = useState({\n  //   name: \"\",\n  //   email: \"\",\n  //   subject: \"\",\n  //   message: \"\",\n  // });\n\n  // const handleInputChange = (e) => {\n  //   const { name, value } = e.target;\n  //   setFormData({\n  //     ...formData,\n  //     [name]: value,\n\n  //   });\n\n  // };\n\n  // const handleFormSubmit = (e) => {\n  //   e.preventDefault();\n  //   console.log(formData)\n  //   // Add your form submission logic here\n  // };\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [subject, setSubject] = useState('');\n  const [message, setMessage] = useState('');\n  const [error, setError] = useState('');\n  const onFormSubmit = e => {\n    e.preventDefault();\n    e.stopPropagation();\n    fetch(\"https://formcarry.com/s/fsNGv2LLcoa\", {\n      method: 'POST',\n      headers: {\n        \"Accept\": \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        name,\n        email,\n        subject,\n        message\n      })\n    }).then(response => response.json()).then(response => {\n      if (response.code === 200) {\n        alert(\"We received your submission, thank you!\");\n      } else if (response.code === 422) {\n        // Field validation failed\n        setError(response.message);\n      } else {\n        // other error from formcarry\n        setError(response.message);\n      }\n    }).catch(error => {\n      // request related error.\n      setError(error.message ? error.message : error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"\",\n    children: [/*#__PURE__*/_jsxDEV(Banner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      name: name,\n      setName: setName,\n      email: email,\n      setEmail: setEmail,\n      setSubject: setSubject,\n      subject: subject,\n      setMessage: setMessage,\n      message: message,\n      onSubmit: onFormSubmit,\n      error: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Map, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n_s(Contact, \"9o9PF/eo6EYmE1FLGdCxc3YGP2o=\");\n_c = Contact;\nexport default Contact;\nvar _c;\n$RefreshReg$(_c, \"Contact\");","map":{"version":3,"names":["React","useState","Banner","Form","Map","jsxDEV","_jsxDEV","Contact","_s","name","setName","email","setEmail","subject","setSubject","message","setMessage","error","setError","onFormSubmit","e","preventDefault","stopPropagation","fetch","method","headers","body","JSON","stringify","then","response","json","code","alert","catch","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","_c","$RefreshReg$"],"sources":["/home/dryphter-dev/Projects/Web/MERN/product-showcase/frontend/src/pages/Contact.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport Banner from \"../components/contact/Banner\";\nimport Form from \"../components/contact/Form\";\nimport Map from \"../components/contact/Map\";\n\nconst Contact = () => {\n  // const [formData, setFormData] = useState({\n  //   name: \"\",\n  //   email: \"\",\n  //   subject: \"\",\n  //   message: \"\",\n  // });\n\n  // const handleInputChange = (e) => {\n  //   const { name, value } = e.target;\n  //   setFormData({\n  //     ...formData,\n  //     [name]: value,\n      \n  //   });\n    \n  // };\n\n  // const handleFormSubmit = (e) => {\n  //   e.preventDefault();\n  //   console.log(formData)\n  //   // Add your form submission logic here\n  // };\n  const [name, setName] = useState('')\n  const [email, setEmail] = useState('')\n  const [subject, setSubject] = useState('')\n  const [message, setMessage] = useState('')\n\n  const [error, setError] = useState('')\n\n  const onFormSubmit = (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n\n    fetch(\"https://formcarry.com/s/fsNGv2LLcoa\", {\n      method: 'POST',\n      headers: { \n        \"Accept\": \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({ name, email, subject, message })\n    })\n    .then(response => response.json())\n\n    .then(response => {\n      if (response.code === 200) {\n        alert(\"We received your submission, thank you!\");\n      }\n      else if(response.code === 422){\n        // Field validation failed\n        setError(response.message)\n      }\n      else {\n        // other error from formcarry\n        setError(response.message)\n      }\n    })\n    .catch(error => {\n      // request related error.\n      setError(error.message ? error.message : error);\n    });\n  }\n\n  return (\n    <div className=\"\">\n      <Banner />\n      <Form\n      name={name}\n      setName={setName}\n      email={email}\n      setEmail={setEmail}\n      setSubject={setSubject}\n      subject={subject}\n      setMessage={setMessage}\n      message={message}\n      onSubmit={onFormSubmit}\n      error={error}\n    />\n      <Map />\n    </div>\n  );\n};\n\nexport default Contact;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
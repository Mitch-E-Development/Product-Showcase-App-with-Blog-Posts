{"ast":null,"code":"var _jsxFileName = \"/home/dryphter-dev/Projects/Web/MERN/product-showcase/frontend/src/components/posts/PostsCards.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport PostCard from \"./PostCard\";\nimport Pagination from \"./Pagination\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostsCards = ({\n  posts\n}) => {\n  _s();\n  const [currentPage, setCurrentPage] = useState(1);\n  const postsPerPage = 1;\n\n  // Calculate the index of the last post on the current page\n  const indexOfLastPost = currentPage * postsPerPage;\n  // Calculate the index of the first post on the current page\n  const indexOfFirstPost = indexOfLastPost - postsPerPage;\n  // Get the current page of posts\n  const currentPosts = posts.slice(indexOfFirstPost, indexOfLastPost);\n\n  // Change page\n  const paginate = pageNumber => setCurrentPage(pageNumber);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"py-12 px-10\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-2 xl:grid-cols-4 gap-4\",\n        children: currentPosts.map(post => /*#__PURE__*/_jsxDEV(PostCard, {\n          post: post\n        }, post.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n        currentPage: currentPage,\n        postsPerPage: postsPerPage,\n        totalPosts: posts.length,\n        paginate: paginate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_s(PostsCards, \"6xAUoJ2motYJ38x4zeUWisA+X/4=\");\n_c = PostsCards;\nexport default PostsCards;\nvar _c;\n$RefreshReg$(_c, \"PostsCards\");","map":{"version":3,"names":["React","useState","PostCard","Pagination","jsxDEV","_jsxDEV","PostsCards","posts","_s","currentPage","setCurrentPage","postsPerPage","indexOfLastPost","indexOfFirstPost","currentPosts","slice","paginate","pageNumber","children","className","map","post","id","fileName","_jsxFileName","lineNumber","columnNumber","totalPosts","length","_c","$RefreshReg$"],"sources":["/home/dryphter-dev/Projects/Web/MERN/product-showcase/frontend/src/components/posts/PostsCards.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport PostCard from \"./PostCard\";\nimport Pagination from \"./Pagination\";\n\nconst PostsCards = ({ posts }) => {\n  const [currentPage, setCurrentPage] = useState(1);\n  const postsPerPage = 1;\n\n  // Calculate the index of the last post on the current page\n  const indexOfLastPost = currentPage * postsPerPage;\n  // Calculate the index of the first post on the current page\n  const indexOfFirstPost = indexOfLastPost - postsPerPage;\n  // Get the current page of posts\n  const currentPosts = posts.slice(indexOfFirstPost, indexOfLastPost);\n\n  // Change page\n  const paginate = (pageNumber) => setCurrentPage(pageNumber);\n\n  return (\n    <div>\n      <div className=\"py-12 px-10\">\n        <div className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-2 xl:grid-cols-4 gap-4\">\n          {currentPosts.map((post) => (\n            <PostCard key={post.id} post={post} />\n          ))}\n        </div>\n        <Pagination\n        currentPage={currentPage}\n        postsPerPage={postsPerPage}\n        totalPosts={posts.length}\n        paginate={paginate}\n      />\n      </div>\n\n    </div>\n  );\n};\n\nexport default PostsCards;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,UAAU,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,MAAMC,UAAU,GAAGA,CAAC;EAAEC;AAAM,CAAC,KAAK;EAAAC,EAAA;EAChC,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAMU,YAAY,GAAG,CAAC;;EAEtB;EACA,MAAMC,eAAe,GAAGH,WAAW,GAAGE,YAAY;EAClD;EACA,MAAME,gBAAgB,GAAGD,eAAe,GAAGD,YAAY;EACvD;EACA,MAAMG,YAAY,GAAGP,KAAK,CAACQ,KAAK,CAACF,gBAAgB,EAAED,eAAe,CAAC;;EAEnE;EACA,MAAMI,QAAQ,GAAIC,UAAU,IAAKP,cAAc,CAACO,UAAU,CAAC;EAE3D,oBACEZ,OAAA;IAAAa,QAAA,eACEb,OAAA;MAAKc,SAAS,EAAC,aAAa;MAAAD,QAAA,gBAC1Bb,OAAA;QAAKc,SAAS,EAAC,qEAAqE;QAAAD,QAAA,EACjFJ,YAAY,CAACM,GAAG,CAAEC,IAAI,iBACrBhB,OAAA,CAACH,QAAQ;UAAemB,IAAI,EAAEA;QAAK,GAApBA,IAAI,CAACC,EAAE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAe,CACtC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACNrB,OAAA,CAACF,UAAU;QACXM,WAAW,EAAEA,WAAY;QACzBE,YAAY,EAAEA,YAAa;QAC3BgB,UAAU,EAAEpB,KAAK,CAACqB,MAAO;QACzBZ,QAAQ,EAAEA;MAAS;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEH,CAAC;AAEV,CAAC;AAAClB,EAAA,CAhCIF,UAAU;AAAAuB,EAAA,GAAVvB,UAAU;AAkChB,eAAeA,UAAU;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/home/dryphter-dev/Projects/Web/MERN/product-showcase/frontend/src/pages/Posts.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { getPosts } from \"../services/postService\";\nimport Banner from \"../components/posts/Banner\";\nimport Filters from \"../components/posts/Filters\";\nimport PostsCards from \"../components/posts/PostsCards\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Posts = () => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [filteredPosts, setFilteredPosts] = useState([]);\n  const [filter, setFilter] = useState(\"\");\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const postData = await getPosts();\n        setPosts(postData);\n        setFilteredPosts(postData); // Initialize filtered posts with all posts\n      } catch (error) {\n        console.log(\"Error fetching data:\", error);\n      }\n    };\n    fetchData();\n  }, []);\n\n  // Function to handle search\n  const handleSearch = query => {\n    setSearchQuery(query); // Update searchQuery state\n    applyFilters(posts, query); // Apply filters\n  };\n\n  // Function to apply filters\n  const applyFilters = (data, query = \"\") => {\n    let filteredData = data;\n\n    // Apply search query filter\n    if (query) {\n      filteredData = filteredData.filter(post => post.title.toLowerCase().includes(query.toLowerCase()) || post.author.toLowerCase().includes(query.toLowerCase()) || post.category.toLowerCase().includes(query.toLowerCase()) || post.content.toLowerCase().includes(query.toLowerCase()));\n    }\n\n    // Apply category filter\n    if (filter) {\n      filteredData = filteredData.filter(post => post.category.toLowerCase() === filter.toLowerCase());\n    }\n    setFilteredPosts(filteredData); // Update filteredPosts state\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"\",\n    children: [/*#__PURE__*/_jsxDEV(Banner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Filters, {\n      setFilter: setFilter,\n      handleSearch: handleSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PostsCards, {\n      posts: filteredPosts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(Posts, \"+9foY7e7t+7Iea9WQr3S8RSbJiA=\");\n_c = Posts;\nexport default Posts;\nvar _c;\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"names":["React","useState","useEffect","getPosts","Banner","Filters","PostsCards","jsxDEV","_jsxDEV","Posts","_s","posts","setPosts","filteredPosts","setFilteredPosts","filter","setFilter","searchQuery","setSearchQuery","fetchData","postData","error","console","log","handleSearch","query","applyFilters","data","filteredData","post","title","toLowerCase","includes","author","category","content","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/dryphter-dev/Projects/Web/MERN/product-showcase/frontend/src/pages/Posts.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { getPosts } from \"../services/postService\";\nimport Banner from \"../components/posts/Banner\";\nimport Filters from \"../components/posts/Filters\";\nimport PostsCards from \"../components/posts/PostsCards\";\n\nconst Posts = () => {\n  const [posts, setPosts] = useState([]);\n  const [filteredPosts, setFilteredPosts] = useState([]);\n  const [filter, setFilter] = useState(\"\");\n  const [searchQuery, setSearchQuery] = useState(\"\");\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const postData = await getPosts();\n        setPosts(postData);\n        setFilteredPosts(postData); // Initialize filtered posts with all posts\n      } catch (error) {\n        console.log(\"Error fetching data:\", error);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  // Function to handle search\n  const handleSearch = (query) => {\n    setSearchQuery(query); // Update searchQuery state\n    applyFilters(posts, query); // Apply filters\n  };\n\n  // Function to apply filters\n  const applyFilters = (data, query = \"\") => {\n    let filteredData = data;\n\n    // Apply search query filter\n    if (query) {\n      filteredData = filteredData.filter(\n        (post) =>\n          post.title.toLowerCase().includes(query.toLowerCase()) ||\n          post.author.toLowerCase().includes(query.toLowerCase()) ||\n          post.category.toLowerCase().includes(query.toLowerCase()) ||\n          post.content.toLowerCase().includes(query.toLowerCase())\n      );\n    }\n\n    // Apply category filter\n    if (filter) {\n      filteredData = filteredData.filter((post) => post.category.toLowerCase() === filter.toLowerCase());\n    }\n\n    setFilteredPosts(filteredData); // Update filteredPosts state\n  };\n\n  return (\n    <div className=\"\">\n      <Banner />\n      <Filters setFilter={setFilter} handleSearch={handleSearch} />\n      <PostsCards posts={filteredPosts} />\n    </div>\n  );\n};\n\nexport default Posts;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,QAAQ,QAAQ,yBAAyB;AAClD,OAAOC,MAAM,MAAM,4BAA4B;AAC/C,OAAOC,OAAO,MAAM,6BAA6B;AACjD,OAAOC,UAAU,MAAM,gCAAgC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExD,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACY,aAAa,EAAEC,gBAAgB,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACc,MAAM,EAAEC,SAAS,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACgB,WAAW,EAAEC,cAAc,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAElDC,SAAS,CAAC,MAAM;IACd,MAAMiB,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMjB,QAAQ,CAAC,CAAC;QACjCS,QAAQ,CAACQ,QAAQ,CAAC;QAClBN,gBAAgB,CAACM,QAAQ,CAAC,CAAC,CAAC;MAC9B,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEF,KAAK,CAAC;MAC5C;IACF,CAAC;IAEDF,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMK,YAAY,GAAIC,KAAK,IAAK;IAC9BP,cAAc,CAACO,KAAK,CAAC,CAAC,CAAC;IACvBC,YAAY,CAACf,KAAK,EAAEc,KAAK,CAAC,CAAC,CAAC;EAC9B,CAAC;;EAED;EACA,MAAMC,YAAY,GAAGA,CAACC,IAAI,EAAEF,KAAK,GAAG,EAAE,KAAK;IACzC,IAAIG,YAAY,GAAGD,IAAI;;IAEvB;IACA,IAAIF,KAAK,EAAE;MACTG,YAAY,GAAGA,YAAY,CAACb,MAAM,CAC/Bc,IAAI,IACHA,IAAI,CAACC,KAAK,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACP,KAAK,CAACM,WAAW,CAAC,CAAC,CAAC,IACtDF,IAAI,CAACI,MAAM,CAACF,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACP,KAAK,CAACM,WAAW,CAAC,CAAC,CAAC,IACvDF,IAAI,CAACK,QAAQ,CAACH,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACP,KAAK,CAACM,WAAW,CAAC,CAAC,CAAC,IACzDF,IAAI,CAACM,OAAO,CAACJ,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACP,KAAK,CAACM,WAAW,CAAC,CAAC,CAC3D,CAAC;IACH;;IAEA;IACA,IAAIhB,MAAM,EAAE;MACVa,YAAY,GAAGA,YAAY,CAACb,MAAM,CAAEc,IAAI,IAAKA,IAAI,CAACK,QAAQ,CAACH,WAAW,CAAC,CAAC,KAAKhB,MAAM,CAACgB,WAAW,CAAC,CAAC,CAAC;IACpG;IAEAjB,gBAAgB,CAACc,YAAY,CAAC,CAAC,CAAC;EAClC,CAAC;EAED,oBACEpB,OAAA;IAAK4B,SAAS,EAAC,EAAE;IAAAC,QAAA,gBACf7B,OAAA,CAACJ,MAAM;MAAAkC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACVjC,OAAA,CAACH,OAAO;MAACW,SAAS,EAAEA,SAAU;MAACQ,YAAY,EAAEA;IAAa;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC7DjC,OAAA,CAACF,UAAU;MAACK,KAAK,EAAEE;IAAc;MAAAyB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjC,CAAC;AAEV,CAAC;AAAC/B,EAAA,CAxDID,KAAK;AAAAiC,EAAA,GAALjC,KAAK;AA0DX,eAAeA,KAAK;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
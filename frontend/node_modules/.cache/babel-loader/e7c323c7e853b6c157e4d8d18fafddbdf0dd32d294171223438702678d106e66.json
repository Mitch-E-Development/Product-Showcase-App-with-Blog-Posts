{"ast":null,"code":"var _jsxFileName = \"/home/dryphter-dev/Projects/Web/MERN/product-showcase/frontend/src/pages/Posts.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { getPosts } from \"../services/postService\";\nimport Banner from \"../components/posts/Banner\";\nimport Filters from \"../components/posts/Filters\";\nimport PostsCards from \"../components/posts/PostsCards\";\nimport Pagination from \"../components/posts/Pagination\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Posts = () => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [filteredPosts, setFilteredPosts] = useState([]);\n  const [filter, setFilter] = useState(\"\");\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [activeFilter, setActiveFilter] = useState(\"\");\n  const [currentPage, setCurrentPage] = useState(1);\n  const [postsPerPage, setPostsPerPage] = useState(4);\n\n  // Calculate current posts to display based on pagination\n  const indexOfLastPost = currentPage * postsPerPage;\n  const indexOfFirstPost = indexOfLastPost - postsPerPage;\n  const currentPosts = filteredPosts.slice(indexOfFirstPost, indexOfLastPost);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        // setLoading(true);\n        const postData = await getPosts();\n        setPosts(postData);\n        setFilteredPosts(postData); // Initialize filtered posts with all posts\n      } catch (error) {\n        console.log(\"Error fetching data:\", error);\n      }\n    };\n    fetchData();\n  }, []);\n  const handleSearch = query => {\n    setSearchQuery(query); // Update searchQuery state\n    // Reset currentPage to 1 when a new search term is entered\n    setCurrentPage(1);\n    const filtered = applyFilters(posts, filter, query); // Apply both filters\n    setFilteredPosts(filtered); // Update filteredPosts state\n  };\n  const handleFilter = categoryFilter => {\n    // Update category filter state\n    setFilter(categoryFilter);\n    // Reset search query state\n    setSearchQuery(\"\");\n    // Reset currentPage to 1\n    setCurrentPage(1);\n    // Apply category filter only\n    const filtered = applyFilters(posts, categoryFilter, \"\");\n    // Update filteredPosts state\n    setFilteredPosts(filtered);\n  };\n  const handlePagination = pageNumber => {\n    setCurrentPage(pageNumber);\n  };\n\n  // Helper function to apply filters\n  const applyFilters = (posts, categoryFilter, searchQuery) => {\n    return posts.filter(post => {\n      const title = post.title.toLowerCase();\n      const author = post.author.toLowerCase();\n      const category = post.category.toLowerCase();\n      const contentSections = post.content.sections.map(section => `${section.heading} ${section.text}`).join(\" \").toLowerCase();\n      // Check if post passes category filter\n      const passesCategoryFilter = categoryFilter === \"\" || category.includes(categoryFilter.toLowerCase());\n      // Check if post passes search query\n      const passesSearchQuery = searchQuery === \"\" || title.includes(searchQuery.toLowerCase()) || author.includes(searchQuery.toLowerCase()) || category.includes(searchQuery.toLowerCase()) || contentSections.includes(searchQuery.toLowerCase());\n      return passesCategoryFilter && passesSearchQuery;\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"\",\n    children: [/*#__PURE__*/_jsxDEV(Banner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Filters, {\n      handleFilter: handleFilter,\n      handleSearch: handleSearch,\n      activeFilter: activeFilter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PostsCards, {\n      posts: currentPosts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n      currentPage: currentPage,\n      postsPerPage: postsPerPage,\n      length: filteredPosts.length,\n      handlePagination: handlePagination\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n};\n_s(Posts, \"R8edO5TbyI1gwC7dYwsw5jv618U=\");\n_c = Posts;\nexport default Posts;\nvar _c;\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"names":["React","useState","useEffect","getPosts","Banner","Filters","PostsCards","Pagination","jsxDEV","_jsxDEV","Posts","_s","posts","setPosts","filteredPosts","setFilteredPosts","filter","setFilter","searchQuery","setSearchQuery","activeFilter","setActiveFilter","currentPage","setCurrentPage","postsPerPage","setPostsPerPage","indexOfLastPost","indexOfFirstPost","currentPosts","slice","fetchData","postData","error","console","log","handleSearch","query","filtered","applyFilters","handleFilter","categoryFilter","handlePagination","pageNumber","post","title","toLowerCase","author","category","contentSections","content","sections","map","section","heading","text","join","passesCategoryFilter","includes","passesSearchQuery","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","_c","$RefreshReg$"],"sources":["/home/dryphter-dev/Projects/Web/MERN/product-showcase/frontend/src/pages/Posts.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { getPosts } from \"../services/postService\";\nimport Banner from \"../components/posts/Banner\";\nimport Filters from \"../components/posts/Filters\";\nimport PostsCards from \"../components/posts/PostsCards\";\nimport Pagination from \"../components/posts/Pagination\";\n\nconst Posts = () => {\n  const [posts, setPosts] = useState([]);\n  const [filteredPosts, setFilteredPosts] = useState([]);\n  const [filter, setFilter] = useState(\"\");\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [activeFilter, setActiveFilter] = useState(\"\");\n  const [currentPage, setCurrentPage] = useState(1);\n  const [postsPerPage, setPostsPerPage] = useState(4);\n\n  // Calculate current posts to display based on pagination\n  const indexOfLastPost = currentPage * postsPerPage;\n  const indexOfFirstPost = indexOfLastPost - postsPerPage;\n  const currentPosts = filteredPosts.slice(indexOfFirstPost, indexOfLastPost);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        // setLoading(true);\n        const postData = await getPosts();\n        setPosts(postData);\n        setFilteredPosts(postData); // Initialize filtered posts with all posts\n      } catch (error) {\n        console.log(\"Error fetching data:\", error);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  const handleSearch = (query) => {\n    setSearchQuery(query); // Update searchQuery state\n    // Reset currentPage to 1 when a new search term is entered\n    setCurrentPage(1);\n    const filtered = applyFilters(posts, filter, query); // Apply both filters\n    setFilteredPosts(filtered); // Update filteredPosts state\n  };\n  \n\n  const handleFilter = (categoryFilter) => {\n    // Update category filter state\n    setFilter(categoryFilter);\n    // Reset search query state\n    setSearchQuery(\"\");\n    // Reset currentPage to 1\n    setCurrentPage(1);\n    // Apply category filter only\n    const filtered = applyFilters(posts, categoryFilter, \"\");\n    // Update filteredPosts state\n    setFilteredPosts(filtered);\n  };\n  \n\n  const handlePagination = (pageNumber) => {\n    setCurrentPage(pageNumber);\n  };\n\n  // Helper function to apply filters\n  const applyFilters = (posts, categoryFilter, searchQuery) => {\n    return posts.filter((post) => {\n      const title = post.title.toLowerCase();\n      const author = post.author.toLowerCase();\n      const category = post.category.toLowerCase();\n      const contentSections = post.content.sections\n        .map((section) => `${section.heading} ${section.text}`)\n        .join(\" \")\n        .toLowerCase();\n      // Check if post passes category filter\n      const passesCategoryFilter =\n        categoryFilter === \"\" || category.includes(categoryFilter.toLowerCase());\n      // Check if post passes search query\n      const passesSearchQuery =\n        searchQuery === \"\" ||\n        title.includes(searchQuery.toLowerCase()) ||\n        author.includes(searchQuery.toLowerCase()) ||\n        category.includes(searchQuery.toLowerCase()) ||\n        contentSections.includes(searchQuery.toLowerCase());\n      return passesCategoryFilter && passesSearchQuery;\n    });\n  };\n\n  return (\n    <div className=\"\">\n      <Banner />\n      <Filters handleFilter={handleFilter} handleSearch={handleSearch}  activeFilter={activeFilter} />\n      <PostsCards posts={currentPosts} />\n\n      {/* PAGINATION */}\n      <Pagination\n        currentPage={currentPage}\n        postsPerPage={postsPerPage}\n        length={filteredPosts.length}\n        handlePagination={handlePagination}\n      />\n    </div>\n  );\n};\n\nexport default Posts;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
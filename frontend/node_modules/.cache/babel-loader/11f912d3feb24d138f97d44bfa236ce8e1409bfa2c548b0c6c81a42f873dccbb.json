{"ast":null,"code":"var _jsxFileName = \"/home/dryphter-dev/Projects/Web/MERN/product-showcase/frontend/src/pages/Posts.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { getPosts } from \"../services/postService\";\nimport Banner from \"../components/posts/Banner\";\nimport Filters from \"../components/posts/Filters\";\nimport PostsCards from \"../components/posts/PostsCards\";\nimport Pagination from \"../components/posts/Pagination\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Posts = () => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [filteredPosts, setFilteredPosts] = useState([]);\n  const [filter, setFilter] = useState(\"\");\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [currentPage, setCurrentPage] = useState(1);\n  const [postsPerPage] = useState(4);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const postData = await getPosts();\n        setPosts(postData);\n        setFilteredPosts(postData); // Initialize filtered posts with all posts\n      } catch (error) {\n        console.log(\"Error fetching data:\", error);\n      }\n    };\n    fetchData();\n  }, []);\n  useEffect(() => {\n    // Apply filters whenever searchQuery or filter changes\n    const filtered = applyFilters(posts, filter, searchQuery);\n    setFilteredPosts(filtered);\n    setCurrentPage(1); // Reset currentPage when filters change\n  }, [posts, filter, searchQuery]);\n  const handleSearch = query => {\n    setSearchQuery(query);\n  };\n  const handleFilter = categoryFilter => {\n    setFilter(categoryFilter);\n  };\n  const handlePagination = pageNumber => {\n    setCurrentPage(pageNumber);\n  };\n\n  // Helper function to apply filters\n  const applyFilters = (posts, categoryFilter, searchQuery) => {\n    return posts.filter(post => {\n      const title = post.title.toLowerCase();\n      const author = post.author.toLowerCase();\n      const category = post.category.toLowerCase();\n      const contentSections = post.content.sections.map(section => `${section.heading} ${section.text}`).join(\" \").toLowerCase();\n      const passesCategoryFilter = categoryFilter === \"\" || category.includes(categoryFilter.toLowerCase());\n      const passesSearchQuery = searchQuery === \"\" || title.includes(searchQuery.toLowerCase()) || author.includes(searchQuery.toLowerCase()) || category.includes(searchQuery.toLowerCase()) || contentSections.includes(searchQuery.toLowerCase());\n      return passesCategoryFilter && passesSearchQuery;\n    });\n  };\n\n  // Calculate current posts to display based on pagination\n  const indexOfLastPost = currentPage * postsPerPage;\n  const indexOfFirstPost = indexOfLastPost - postsPerPage;\n  const currentPosts = filteredPosts.slice(indexOfFirstPost, indexOfLastPost);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Banner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Filters, {\n      handleFilter: handleFilter,\n      handleSearch: handleSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PostsCards, {\n      posts: currentPosts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n      currentPage: currentPage,\n      postsPerPage: postsPerPage,\n      length: filteredPosts.length,\n      handlePagination: handlePagination\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n_s(Posts, \"5lGAfi6GvlTfS4xqATiWmab+ktI=\");\n_c = Posts;\nexport default Posts;\nvar _c;\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"names":["React","useState","useEffect","getPosts","Banner","Filters","PostsCards","Pagination","jsxDEV","_jsxDEV","Posts","_s","posts","setPosts","filteredPosts","setFilteredPosts","filter","setFilter","searchQuery","setSearchQuery","currentPage","setCurrentPage","postsPerPage","fetchData","postData","error","console","log","filtered","applyFilters","handleSearch","query","handleFilter","categoryFilter","handlePagination","pageNumber","post","title","toLowerCase","author","category","contentSections","content","sections","map","section","heading","text","join","passesCategoryFilter","includes","passesSearchQuery","indexOfLastPost","indexOfFirstPost","currentPosts","slice","children","fileName","_jsxFileName","lineNumber","columnNumber","length","_c","$RefreshReg$"],"sources":["/home/dryphter-dev/Projects/Web/MERN/product-showcase/frontend/src/pages/Posts.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { getPosts } from \"../services/postService\";\nimport Banner from \"../components/posts/Banner\";\nimport Filters from \"../components/posts/Filters\";\nimport PostsCards from \"../components/posts/PostsCards\";\nimport Pagination from \"../components/posts/Pagination\";\n\nconst Posts = () => {\n  const [posts, setPosts] = useState([]);\n  const [filteredPosts, setFilteredPosts] = useState([]);\n  const [filter, setFilter] = useState(\"\");\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [currentPage, setCurrentPage] = useState(1);\n  const [postsPerPage] = useState(4);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const postData = await getPosts();\n        setPosts(postData);\n        setFilteredPosts(postData); // Initialize filtered posts with all posts\n      } catch (error) {\n        console.log(\"Error fetching data:\", error);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  useEffect(() => {\n    // Apply filters whenever searchQuery or filter changes\n    const filtered = applyFilters(posts, filter, searchQuery);\n    setFilteredPosts(filtered);\n    setCurrentPage(1); // Reset currentPage when filters change\n  }, [posts, filter, searchQuery]);\n\n  const handleSearch = (query) => {\n    setSearchQuery(query);\n  };\n\n  const handleFilter = (categoryFilter) => {\n    setFilter(categoryFilter);\n  };\n\n  const handlePagination = (pageNumber) => {\n    setCurrentPage(pageNumber);\n  };\n\n  // Helper function to apply filters\n  const applyFilters = (posts, categoryFilter, searchQuery) => {\n    return posts.filter((post) => {\n      const title = post.title.toLowerCase();\n      const author = post.author.toLowerCase();\n      const category = post.category.toLowerCase();\n      const contentSections = post.content.sections\n        .map((section) => `${section.heading} ${section.text}`)\n        .join(\" \")\n        .toLowerCase();\n\n      const passesCategoryFilter =\n        categoryFilter === \"\" || category.includes(categoryFilter.toLowerCase());\n\n      const passesSearchQuery =\n        searchQuery === \"\" ||\n        title.includes(searchQuery.toLowerCase()) ||\n        author.includes(searchQuery.toLowerCase()) ||\n        category.includes(searchQuery.toLowerCase()) ||\n        contentSections.includes(searchQuery.toLowerCase());\n\n      return passesCategoryFilter && passesSearchQuery;\n    });\n  };\n\n  // Calculate current posts to display based on pagination\n  const indexOfLastPost = currentPage * postsPerPage;\n  const indexOfFirstPost = indexOfLastPost - postsPerPage;\n  const currentPosts = filteredPosts.slice(indexOfFirstPost, indexOfLastPost);\n\n  return (\n    <div>\n      <Banner />\n      <Filters handleFilter={handleFilter} handleSearch={handleSearch} />\n      <PostsCards posts={currentPosts} />\n      <Pagination\n        currentPage={currentPage}\n        postsPerPage={postsPerPage}\n        length={filteredPosts.length}\n        handlePagination={handlePagination}\n      />\n    </div>\n  );\n};\n\nexport default Posts;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,QAAQ,QAAQ,yBAAyB;AAClD,OAAOC,MAAM,MAAM,4BAA4B;AAC/C,OAAOC,OAAO,MAAM,6BAA6B;AACjD,OAAOC,UAAU,MAAM,gCAAgC;AACvD,OAAOC,UAAU,MAAM,gCAAgC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExD,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACa,aAAa,EAAEC,gBAAgB,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACe,MAAM,EAAEC,SAAS,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACiB,WAAW,EAAEC,cAAc,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACmB,WAAW,EAAEC,cAAc,CAAC,GAAGpB,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAM,CAACqB,YAAY,CAAC,GAAGrB,QAAQ,CAAC,CAAC,CAAC;EAElCC,SAAS,CAAC,MAAM;IACd,MAAMqB,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMrB,QAAQ,CAAC,CAAC;QACjCU,QAAQ,CAACW,QAAQ,CAAC;QAClBT,gBAAgB,CAACS,QAAQ,CAAC,CAAC,CAAC;MAC9B,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEF,KAAK,CAAC;MAC5C;IACF,CAAC;IAEDF,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAENrB,SAAS,CAAC,MAAM;IACd;IACA,MAAM0B,QAAQ,GAAGC,YAAY,CAACjB,KAAK,EAAEI,MAAM,EAAEE,WAAW,CAAC;IACzDH,gBAAgB,CAACa,QAAQ,CAAC;IAC1BP,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC;EACrB,CAAC,EAAE,CAACT,KAAK,EAAEI,MAAM,EAAEE,WAAW,CAAC,CAAC;EAEhC,MAAMY,YAAY,GAAIC,KAAK,IAAK;IAC9BZ,cAAc,CAACY,KAAK,CAAC;EACvB,CAAC;EAED,MAAMC,YAAY,GAAIC,cAAc,IAAK;IACvChB,SAAS,CAACgB,cAAc,CAAC;EAC3B,CAAC;EAED,MAAMC,gBAAgB,GAAIC,UAAU,IAAK;IACvCd,cAAc,CAACc,UAAU,CAAC;EAC5B,CAAC;;EAED;EACA,MAAMN,YAAY,GAAGA,CAACjB,KAAK,EAAEqB,cAAc,EAAEf,WAAW,KAAK;IAC3D,OAAON,KAAK,CAACI,MAAM,CAAEoB,IAAI,IAAK;MAC5B,MAAMC,KAAK,GAAGD,IAAI,CAACC,KAAK,CAACC,WAAW,CAAC,CAAC;MACtC,MAAMC,MAAM,GAAGH,IAAI,CAACG,MAAM,CAACD,WAAW,CAAC,CAAC;MACxC,MAAME,QAAQ,GAAGJ,IAAI,CAACI,QAAQ,CAACF,WAAW,CAAC,CAAC;MAC5C,MAAMG,eAAe,GAAGL,IAAI,CAACM,OAAO,CAACC,QAAQ,CAC1CC,GAAG,CAAEC,OAAO,IAAM,GAAEA,OAAO,CAACC,OAAQ,IAAGD,OAAO,CAACE,IAAK,EAAC,CAAC,CACtDC,IAAI,CAAC,GAAG,CAAC,CACTV,WAAW,CAAC,CAAC;MAEhB,MAAMW,oBAAoB,GACxBhB,cAAc,KAAK,EAAE,IAAIO,QAAQ,CAACU,QAAQ,CAACjB,cAAc,CAACK,WAAW,CAAC,CAAC,CAAC;MAE1E,MAAMa,iBAAiB,GACrBjC,WAAW,KAAK,EAAE,IAClBmB,KAAK,CAACa,QAAQ,CAAChC,WAAW,CAACoB,WAAW,CAAC,CAAC,CAAC,IACzCC,MAAM,CAACW,QAAQ,CAAChC,WAAW,CAACoB,WAAW,CAAC,CAAC,CAAC,IAC1CE,QAAQ,CAACU,QAAQ,CAAChC,WAAW,CAACoB,WAAW,CAAC,CAAC,CAAC,IAC5CG,eAAe,CAACS,QAAQ,CAAChC,WAAW,CAACoB,WAAW,CAAC,CAAC,CAAC;MAErD,OAAOW,oBAAoB,IAAIE,iBAAiB;IAClD,CAAC,CAAC;EACJ,CAAC;;EAED;EACA,MAAMC,eAAe,GAAGhC,WAAW,GAAGE,YAAY;EAClD,MAAM+B,gBAAgB,GAAGD,eAAe,GAAG9B,YAAY;EACvD,MAAMgC,YAAY,GAAGxC,aAAa,CAACyC,KAAK,CAACF,gBAAgB,EAAED,eAAe,CAAC;EAE3E,oBACE3C,OAAA;IAAA+C,QAAA,gBACE/C,OAAA,CAACL,MAAM;MAAAqD,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACVnD,OAAA,CAACJ,OAAO;MAAC2B,YAAY,EAAEA,YAAa;MAACF,YAAY,EAAEA;IAAa;MAAA2B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACnEnD,OAAA,CAACH,UAAU;MAACM,KAAK,EAAE0C;IAAa;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACnCnD,OAAA,CAACF,UAAU;MACTa,WAAW,EAAEA,WAAY;MACzBE,YAAY,EAAEA,YAAa;MAC3BuC,MAAM,EAAE/C,aAAa,CAAC+C,MAAO;MAC7B3B,gBAAgB,EAAEA;IAAiB;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACjD,EAAA,CApFID,KAAK;AAAAoD,EAAA,GAALpD,KAAK;AAsFX,eAAeA,KAAK;AAAC,IAAAoD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
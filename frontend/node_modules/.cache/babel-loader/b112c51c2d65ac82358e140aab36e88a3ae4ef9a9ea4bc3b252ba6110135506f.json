{"ast":null,"code":"var _jsxFileName = \"/home/dryphter-dev/Projects/Web/MERN/product-showcase/frontend/src/pages/Posts.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { getPosts } from \"../services/postService\";\nimport Banner from \"../components/posts/Banner\";\nimport Filters from \"../components/posts/Filters\";\nimport PostsCards from \"../components/posts/PostsCards\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Posts = () => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [filteredPosts, setFilteredPosts] = useState([]);\n  const [filter, setFilter] = useState(null);\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const postData = await getPosts();\n        setPosts(postData);\n        setFilteredPosts(postData); // Initialize filtered posts with all posts\n      } catch (error) {\n        console.log(\"Error fetching data:\", error);\n      }\n    };\n    fetchData();\n  }, []);\n  useEffect(() => {\n    // Apply filter\n    let filtered = posts;\n    if (filter) {\n      filtered = posts.filter(post => post.filter === filter); // Change 'filter' to the property you're filtering by\n    }\n\n    // Apply search query filter\n    if (searchQuery) {\n      filtered = filtered.filter(post => post.title.toLowerCase().includes(searchQuery.toLowerCase()));\n    }\n    setFilteredPosts(filtered);\n  }, [filter, searchQuery, posts]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"\",\n    children: [/*#__PURE__*/_jsxDEV(Banner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Filters, {\n      filter: filter,\n      setFilter: setFilter,\n      setSearchQuery: setSearchQuery\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PostsCards, {\n      posts: filteredPosts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(Posts, \"HflHKW9DgVDcSB7HnH0A/lX9dzA=\");\n_c = Posts;\nexport default Posts;\nvar _c;\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"names":["React","useState","useEffect","getPosts","Banner","Filters","PostsCards","jsxDEV","_jsxDEV","Posts","_s","posts","setPosts","filteredPosts","setFilteredPosts","filter","setFilter","searchQuery","setSearchQuery","fetchData","postData","error","console","log","filtered","post","title","toLowerCase","includes","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/dryphter-dev/Projects/Web/MERN/product-showcase/frontend/src/pages/Posts.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { getPosts } from \"../services/postService\";\nimport Banner from \"../components/posts/Banner\";\nimport Filters from \"../components/posts/Filters\";\nimport PostsCards from \"../components/posts/PostsCards\";\n\nconst Posts = () => {\n  const [posts, setPosts] = useState([]);\n  const [filteredPosts, setFilteredPosts] = useState([]);\n  const [filter, setFilter] = useState(null);\n  const [searchQuery, setSearchQuery] = useState(\"\");\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const postData = await getPosts();\n        setPosts(postData);\n        setFilteredPosts(postData); // Initialize filtered posts with all posts\n      } catch (error) {\n        console.log(\"Error fetching data:\", error);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  useEffect(() => {\n    // Apply filter\n    let filtered = posts;\n    if (filter) {\n      filtered = posts.filter((post) => post.filter === filter); // Change 'filter' to the property you're filtering by\n    }\n\n    // Apply search query filter\n    if (searchQuery) {\n      filtered = filtered.filter((post) =>\n        post.title.toLowerCase().includes(searchQuery.toLowerCase())\n      );\n    }\n\n    setFilteredPosts(filtered);\n  }, [filter, searchQuery, posts]);\n\n  return (\n    <div className=\"\">\n      <Banner />\n      <Filters filter={filter} setFilter={setFilter} setSearchQuery={setSearchQuery} />\n      <PostsCards posts={filteredPosts} />\n    </div>\n  );\n};\n\nexport default Posts;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,QAAQ,QAAQ,yBAAyB;AAClD,OAAOC,MAAM,MAAM,4BAA4B;AAC/C,OAAOC,OAAO,MAAM,6BAA6B;AACjD,OAAOC,UAAU,MAAM,gCAAgC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExD,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACY,aAAa,EAAEC,gBAAgB,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACc,MAAM,EAAEC,SAAS,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EAC1C,MAAM,CAACgB,WAAW,EAAEC,cAAc,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAElDC,SAAS,CAAC,MAAM;IACd,MAAMiB,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMjB,QAAQ,CAAC,CAAC;QACjCS,QAAQ,CAACQ,QAAQ,CAAC;QAClBN,gBAAgB,CAACM,QAAQ,CAAC,CAAC,CAAC;MAC9B,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEF,KAAK,CAAC;MAC5C;IACF,CAAC;IAEDF,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAENjB,SAAS,CAAC,MAAM;IACd;IACA,IAAIsB,QAAQ,GAAGb,KAAK;IACpB,IAAII,MAAM,EAAE;MACVS,QAAQ,GAAGb,KAAK,CAACI,MAAM,CAAEU,IAAI,IAAKA,IAAI,CAACV,MAAM,KAAKA,MAAM,CAAC,CAAC,CAAC;IAC7D;;IAEA;IACA,IAAIE,WAAW,EAAE;MACfO,QAAQ,GAAGA,QAAQ,CAACT,MAAM,CAAEU,IAAI,IAC9BA,IAAI,CAACC,KAAK,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACX,WAAW,CAACU,WAAW,CAAC,CAAC,CAC7D,CAAC;IACH;IAEAb,gBAAgB,CAACU,QAAQ,CAAC;EAC5B,CAAC,EAAE,CAACT,MAAM,EAAEE,WAAW,EAAEN,KAAK,CAAC,CAAC;EAEhC,oBACEH,OAAA;IAAKqB,SAAS,EAAC,EAAE;IAAAC,QAAA,gBACftB,OAAA,CAACJ,MAAM;MAAA2B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACV1B,OAAA,CAACH,OAAO;MAACU,MAAM,EAAEA,MAAO;MAACC,SAAS,EAAEA,SAAU;MAACE,cAAc,EAAEA;IAAe;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACjF1B,OAAA,CAACF,UAAU;MAACK,KAAK,EAAEE;IAAc;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjC,CAAC;AAEV,CAAC;AAACxB,EAAA,CA5CID,KAAK;AAAA0B,EAAA,GAAL1B,KAAK;AA8CX,eAAeA,KAAK;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
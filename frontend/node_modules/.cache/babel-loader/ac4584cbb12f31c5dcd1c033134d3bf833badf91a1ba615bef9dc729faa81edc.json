{"ast":null,"code":"var _jsxFileName = \"/home/dryphter-dev/Projects/Web/MERN/product-showcase/frontend/src/pages/Posts.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { getPosts } from \"../services/postService\";\nimport Banner from \"../components/posts/Banner\";\nimport Filters from \"../components/posts/Filters\";\nimport PostsCards from \"../components/posts/PostsCards\";\nimport Pagination from \"../components/posts/Pagination\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Posts = () => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [filteredPosts, setFilteredPosts] = useState([]);\n  const [filter, setFilter] = useState(\"\");\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [postsPerPage, setPostsPerPage] = useState(4);\n\n  // Calculate current posts to display based on pagination\n  const indexOfLastPost = currentPage * postsPerPage;\n  const indexOfFirstPost = indexOfLastPost - postsPerPage;\n  const currentPosts = filteredPosts.slice(indexOfFirstPost, indexOfLastPost);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        // setLoading(true);\n        const postData = await getPosts();\n        setPosts(postData);\n        setFilteredPosts(postData); // Initialize filtered posts with all posts\n      } catch (error) {\n        console.log(\"Error fetching data:\", error);\n      }\n    };\n    fetchData();\n  }, []);\n  const handleSearch = query => {\n    setSearchQuery(query); // Update searchQuery state\n    const filtered = posts.filter(post => {\n      const title = post.title.toLowerCase();\n      const author = post.author.toLowerCase();\n      const category = post.category.toLowerCase();\n      const contentSections = post.content.sections.map(section => `${section.heading} ${section.text}`).join(' ').toLowerCase();\n      return title.includes(query.toLowerCase()) || author.includes(query.toLowerCase()) || category.includes(query.toLowerCase()) || contentSections.includes(query.toLowerCase());\n    });\n    setFilteredPosts(filtered); // Update filteredPosts state\n  };\n  const handleFilter = filter => {\n    setFilter(filter);\n    const filtered = posts.filter(post => post.category.toLowerCase().includes(filter.toLowerCase()));\n    setFilteredPosts(filtered);\n    handlePagination(1);\n  };\n  const handlePagination = pageNumber => {\n    setCurrentPage(pageNumber);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"\",\n    children: [/*#__PURE__*/_jsxDEV(Banner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Filters, {\n      handleFilter: handleFilter,\n      handleSearch: handleSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PostsCards, {\n      posts: currentPosts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n      currentPage: currentPage,\n      postsPerPage: postsPerPage,\n      length: filteredPosts.length,\n      handlePagination: handlePagination\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n_s(Posts, \"ACVI9LGR26U6sUhQV3d0H06SjP0=\");\n_c = Posts;\nexport default Posts;\nvar _c;\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"names":["React","useState","useEffect","getPosts","Banner","Filters","PostsCards","Pagination","jsxDEV","_jsxDEV","Posts","_s","posts","setPosts","filteredPosts","setFilteredPosts","filter","setFilter","searchQuery","setSearchQuery","loading","setLoading","currentPage","setCurrentPage","postsPerPage","setPostsPerPage","indexOfLastPost","indexOfFirstPost","currentPosts","slice","fetchData","postData","error","console","log","handleSearch","query","filtered","post","title","toLowerCase","author","category","contentSections","content","sections","map","section","heading","text","join","includes","handleFilter","handlePagination","pageNumber","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","_c","$RefreshReg$"],"sources":["/home/dryphter-dev/Projects/Web/MERN/product-showcase/frontend/src/pages/Posts.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { getPosts } from \"../services/postService\";\nimport Banner from \"../components/posts/Banner\";\nimport Filters from \"../components/posts/Filters\";\nimport PostsCards from \"../components/posts/PostsCards\";\nimport Pagination from \"../components/posts/Pagination\";\n\nconst Posts = () => {\n  const [posts, setPosts] = useState([]);\n  const [filteredPosts, setFilteredPosts] = useState([]);\n  const [filter, setFilter] = useState(\"\");\n  const [searchQuery, setSearchQuery] = useState(\"\");\n\n  const [loading, setLoading] = useState(false);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [postsPerPage, setPostsPerPage] = useState(4);\n\n   // Calculate current posts to display based on pagination\n   const indexOfLastPost = currentPage * postsPerPage;\n   const indexOfFirstPost = indexOfLastPost - postsPerPage;\n   const currentPosts = filteredPosts.slice(indexOfFirstPost, indexOfLastPost);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        // setLoading(true);\n        const postData = await getPosts();\n        setPosts(postData);\n        setFilteredPosts(postData); // Initialize filtered posts with all posts\n      } catch (error) {\n        console.log(\"Error fetching data:\", error);\n      } \n    };\n\n    fetchData();\n  }, []);\n\n  const handleSearch = (query) => {\n    setSearchQuery(query); // Update searchQuery state\n    const filtered = posts.filter((post) => {\n      const title = post.title.toLowerCase();\n      const author = post.author.toLowerCase();\n      const category = post.category.toLowerCase();\n      const contentSections = post.content.sections.map(section => `${section.heading} ${section.text}`).join(' ').toLowerCase();\n      return (\n        title.includes(query.toLowerCase()) ||\n        author.includes(query.toLowerCase()) ||\n        category.includes(query.toLowerCase()) ||\n        contentSections.includes(query.toLowerCase())\n      );\n    });\n    setFilteredPosts(filtered); // Update filteredPosts state\n  };\n\n  const handleFilter = (filter) => {\n    setFilter(filter);\n    const filtered = posts.filter((post) =>\n      post.category.toLowerCase().includes(filter.toLowerCase())\n    );\n    setFilteredPosts(filtered);\n    handlePagination(1)\n  };\n\n  const handlePagination = (pageNumber) => {\n    setCurrentPage(pageNumber);\n  };\n\n\n  return (\n    <div className=\"\">\n      <Banner />\n      <Filters handleFilter={handleFilter} handleSearch={handleSearch} />\n      <PostsCards posts={currentPosts} />\n\n      {/* PAGINATION */}\n      <Pagination\n        currentPage={currentPage}\n        postsPerPage={postsPerPage}\n        length={filteredPosts.length}\n        handlePagination={handlePagination}\n      />\n    </div>\n  );\n};\n\nexport default Posts;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/home/dryphter-dev/Projects/Web/MERN/product-showcase/frontend/src/pages/Posts.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { getPosts } from \"../services/postService\";\nimport Banner from \"../components/posts/Banner\";\nimport Filters from \"../components/posts/Filters\";\nimport PostsCards from \"../components/posts/PostsCards\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Posts = () => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [filteredPosts, setFilteredPosts] = useState([]);\n  const [filter, setFilter] = useState(null);\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  useEffect(() => {\n    fetchData();\n  }, []);\n  const fetchData = async () => {\n    try {\n      const postData = await getPosts(null, null);\n      setPosts(postData);\n      setFilteredPosts(postData); // Initialize filtered posts with all posts\n    } catch (error) {\n      console.log(\"Error fetching data:\", error);\n    }\n  };\n  useEffect(() => {\n    fetchFilteredPosts();\n  }, [filter, searchQuery]);\n  const fetchFilteredPosts = async () => {\n    try {\n      const filteredData = await getPosts(filter, null);\n      setFilteredPosts(filteredData);\n    } catch (error) {\n      console.log(\"Error fetching filtered data:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"\",\n    children: [/*#__PURE__*/_jsxDEV(Banner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Filters, {\n      filter: filter,\n      setFilter: setFilter,\n      setSearchQuery: setSearchQuery\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PostsCards, {\n      posts: filteredPosts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(Posts, \"HflHKW9DgVDcSB7HnH0A/lX9dzA=\");\n_c = Posts;\nexport default Posts;\nvar _c;\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"names":["React","useState","useEffect","getPosts","Banner","Filters","PostsCards","jsxDEV","_jsxDEV","Posts","_s","posts","setPosts","filteredPosts","setFilteredPosts","filter","setFilter","searchQuery","setSearchQuery","fetchData","postData","error","console","log","fetchFilteredPosts","filteredData","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/dryphter-dev/Projects/Web/MERN/product-showcase/frontend/src/pages/Posts.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { getPosts } from \"../services/postService\";\nimport Banner from \"../components/posts/Banner\";\nimport Filters from \"../components/posts/Filters\";\nimport PostsCards from \"../components/posts/PostsCards\";\n\nconst Posts = () => {\n  const [posts, setPosts] = useState([]);\n  const [filteredPosts, setFilteredPosts] = useState([]);\n  const [filter, setFilter] = useState(null);\n  const [searchQuery, setSearchQuery] = useState(\"\");\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const fetchData = async () => {\n    try {\n      const postData = await getPosts(null, null);\n      setPosts(postData);\n      setFilteredPosts(postData); // Initialize filtered posts with all posts\n    } catch (error) {\n      console.log(\"Error fetching data:\", error);\n    }\n  };\n\n  useEffect(() => {\n    fetchFilteredPosts();\n  }, [filter, searchQuery]);\n\n  const fetchFilteredPosts = async () => {\n    try {\n      const filteredData = await getPosts(filter, null);\n      setFilteredPosts(filteredData);\n    } catch (error) {\n      console.log(\"Error fetching filtered data:\", error);\n    }\n  };\n\n  return (\n    <div className=\"\">\n      <Banner />\n      <Filters filter={filter} setFilter={setFilter} setSearchQuery={setSearchQuery} />\n      <PostsCards posts={filteredPosts} />\n    </div>\n  );\n};\n\nexport default Posts;\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,QAAQ,QAAQ,yBAAyB;AAClD,OAAOC,MAAM,MAAM,4BAA4B;AAC/C,OAAOC,OAAO,MAAM,6BAA6B;AACjD,OAAOC,UAAU,MAAM,gCAAgC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExD,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACY,aAAa,EAAEC,gBAAgB,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACc,MAAM,EAAEC,SAAS,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EAC1C,MAAM,CAACgB,WAAW,EAAEC,cAAc,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAElDC,SAAS,CAAC,MAAM;IACdiB,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC5B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMjB,QAAQ,CAAC,IAAI,EAAE,IAAI,CAAC;MAC3CS,QAAQ,CAACQ,QAAQ,CAAC;MAClBN,gBAAgB,CAACM,QAAQ,CAAC,CAAC,CAAC;IAC9B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEF,KAAK,CAAC;IAC5C;EACF,CAAC;EAEDnB,SAAS,CAAC,MAAM;IACdsB,kBAAkB,CAAC,CAAC;EACtB,CAAC,EAAE,CAACT,MAAM,EAAEE,WAAW,CAAC,CAAC;EAEzB,MAAMO,kBAAkB,GAAG,MAAAA,CAAA,KAAY;IACrC,IAAI;MACF,MAAMC,YAAY,GAAG,MAAMtB,QAAQ,CAACY,MAAM,EAAE,IAAI,CAAC;MACjDD,gBAAgB,CAACW,YAAY,CAAC;IAChC,CAAC,CAAC,OAAOJ,KAAK,EAAE;MACdC,OAAO,CAACC,GAAG,CAAC,+BAA+B,EAAEF,KAAK,CAAC;IACrD;EACF,CAAC;EAED,oBACEb,OAAA;IAAKkB,SAAS,EAAC,EAAE;IAAAC,QAAA,gBACfnB,OAAA,CAACJ,MAAM;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACVvB,OAAA,CAACH,OAAO;MAACU,MAAM,EAAEA,MAAO;MAACC,SAAS,EAAEA,SAAU;MAACE,cAAc,EAAEA;IAAe;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACjFvB,OAAA,CAACF,UAAU;MAACK,KAAK,EAAEE;IAAc;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjC,CAAC;AAEV,CAAC;AAACrB,EAAA,CAxCID,KAAK;AAAAuB,EAAA,GAALvB,KAAK;AA0CX,eAAeA,KAAK;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}